{"version":3,"sources":["network/env.js","network/requests.js","network/auth.js","components/Button/index.js","components/LoadingBar/index.js","pages/CreateDB/index.js","components/ToggleButton/index.js","pages/Instructions/codeExample.js","components/TextBlock/copyIcon.js","components/TextBlock/arrow.js","helpers/system.js","components/TextBlock/index.js","pages/Instructions/index.js","helpers/visual.js","components/ProvideAuth/index.js","components/PrivateRoute/index.js","components/Donation/index.js","App.js","i18next.js","index.js"],"names":["PREFIX","API","CREATE_NEW_USER","TOKEN","DB","a","token","localStorage","getItem","dbName","fetch","result","ok","json","data","setItem","db_name","Error","statusText","removeItem","authContext","createContext","useAuth","useContext","useProvideAuth","useState","user","setUser","signIn","cb","setLoading","createDatabase","then","signOut","removeDatabase","Button","name","callback","className","onClick","LoadingBar","animation","isLoading","style","CreateDB","t","useTranslation","history","useHistory","auth","push","Toggle","buttons","started","curr","setCurr","getData","toggleButton","activeButtonsCount","reduce","res","el","isDisabled","element","toggledClass","disabledClass","concat","createGetDataFunc","buttonBlocks","map","key","classNames","getUsageBlock","language","getInstall","copyIcon","xmlns","viewBox","data-name","d","copiedIcon","width","height","copyListeners","TextBlock","text","textToCopy","showLineNumbers","copiedValue","setCopiedValue","useEffect","document","addEventListener","handleCopy","removeEventListener","navigator","clipboard","readText","forEach","set","catch","err","console","error","writeText","useCopy","copy","icon","instructionsClassName","Instructions","isMobile","undefined","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","useWindowSize","languages","find","toggled","setToggled","getElementById","classList","add","id","ProvideAuth","children","Provider","value","PrivateRoute","render","location","to","pathname","state","from","Donation","href","App","exact","path","resources","en","translation","ru","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","ReactDOM"],"mappings":"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","file":"static/js/main.91e88ce0.chunk.js","sourcesContent":["export const PREFIX = '/dbhub_front/'","const API = 'https://dbhub-py.herokuapp.com/'\nconst CREATE_NEW_USER = 'create-new-user'\n\nconst TOKEN = 'token'\nconst DB = 'dbName'\n\n\nexport async function createDatabase() {\n    let token = localStorage.getItem(TOKEN)\n    let dbName = localStorage.getItem(DB)\n    if(token && dbName) {\n        return {token: token, dbName: dbName}\n    }\n\n    let result = await fetch(`${API}/${CREATE_NEW_USER}`)\n\n    if (result.ok) {\n        let data = await result.json()\n        localStorage.setItem(TOKEN, data.token)\n        localStorage.setItem(DB, data.db_name)\n\n        return {token: data.token, dbName: data.db_name}\n    } else {\n        throw new Error(result.statusText)\n    }\n}\n\n// TODO: Add remove database method\nexport async function removeDatabase() {\n    // let result = await fetch(`${API}/${CREATE_NEW_USER}`)\n    //\n    // if (result.ok) {\n    //     let data = await result.json()\n    localStorage.removeItem(TOKEN)\n    localStorage.removeItem(DB)\n    //     return data\n    // } else {\n    //     throw new Error(result.statusText)\n    // }\n}","import {createContext, useContext, useState} from \"react\"\nimport {createDatabase, removeDatabase} from \"./requests\"\n\nconst authContext = createContext(null)\n\n\nfunction useAuth() {\n    return useContext(authContext)\n}\n\n\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null)\n\n    const signIn = (cb, setLoading) => {\n        setLoading(true)\n\n        return createDatabase().then((data) => {\n            setUser({\n                dbName: data.dbName,\n                token: data.token\n            })\n            setLoading(false)\n            cb()\n        })\n    }\n\n    const signOut = cb => {\n        return removeDatabase().then(() => {\n            setUser(null)\n            cb()\n        })\n    }\n\n    return {\n        user,\n        signIn,\n        signOut\n    }\n}\n\n\nexport {authContext, useAuth, useProvideAuth}","import React from 'react'\nimport './index.css'\n\n\nfunction Button({name, callback}) {\n    return (\n        <div className='btn-cont'>\n            <button onClick={callback} className='button'/>\n            <label className='button-label'>{name}</label>\n        </div>\n    )\n}\n\n\nexport {Button}\n","import React from \"react\"\nimport './index.sass'\n\nconst ANIMATION_TYPE = '2s ease-in-out infinite loading'\n\n\nfunction LoadingBar({isLoading}) {\n    const animation = isLoading ? ANIMATION_TYPE : 'none'\n\n    return (\n        <div className='loadingBar'>\n            <div className='loaderPlaceholder'/>\n            <div className='loader' style={{ animation: animation}}/>\n        </div>\n    )\n}\n\n\nexport {LoadingBar}","import './index.sass'\n\nimport React, {useState} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport {useTranslation} from 'react-i18next'\n\nimport {useAuth} from \"../../network/auth\"\nimport {PREFIX} from \"../../network/env\"\n\nimport {Button} from '../../components/Button'\nimport {LoadingBar} from \"../../components/LoadingBar\"\n\n\nfunction CreateDB() {\n    const { t } = useTranslation()\n    const history = useHistory()\n    const auth = useAuth()\n\n    let [isLoading, setLoading] = useState(false)\n    const login = () => auth.signIn(() => history.push(`${PREFIX}credentials`), setLoading)\n    \n    return(\n        <div className='createElement'>\n            <LoadingBar isLoading={isLoading}/>\n            <h2>{t('create_in_one_click')}</h2>\n            <h3>{t('make_it_easy')}</h3>\n            <Button name={t('create_database')} callback={login}/>\n        </div>\n    )\n}\n\n\nexport {CreateDB}\n","import React, {useState} from 'react'\nimport './index.sass'\n\n\nfunction Toggle({buttons, started, className, cb}) {\n    let [curr, setCurr] = useState(started)\n\n    let toggleButton = (el) => {\n        if(el.name === curr.name) {\n            return\n        }\n        setCurr(el)\n        cb(el)\n    }\n    let getData = createGetDataFunc(curr, buttons, toggleButton)\n\n    let buttonBlocks = buttons.map((element, key) => {\n        let [classNames, onClick] = getData(element)\n        return (<div className={`toggleButton ${classNames}`} onClick={onClick} key={key}>{element.name}</div>)\n    })\n    \n    return(\n        <div className={`toggleButtons ${className}`}>{ buttonBlocks }</div>\n    )\n}\n\n\nfunction createGetDataFunc(curr, buttons, toggleButton) {\n    let activeButtonsCount = buttons.reduce((res, el) => !el.isDisabled ? res++ : res, 0)\n    return (element) => {\n        let toggledClass = element.name === curr.name ? 'toggled' : ''\n        let disabledClass = element.isDisabled ? 'disabled noResize' : activeButtonsCount <= 1 ? 'noResize' : ''\n        let onClick = element.isDisabled ? () => {} : () => toggleButton(element)\n\n        if(element.isDisabled)\n            element.name = '⊘'.concat(' ', element.name)\n\n        return[`${toggledClass} ${disabledClass}`, onClick]\n    }\n}\n\n\nexport {Toggle}","export const JAVASCRIPT = 'javascript'\nexport const PYTHON = 'python'\n\nexport const getUsageBlock = (language, token, dbName) => {\n    const code = {\n        'python':\n`from dbhub import get_database\n\ndb = get_database(\n   token='${token}',\n   db_name='${dbName}'\n)\n\ncollection = db.get_collection('users')\ncollection[1] = {'name': 'Ivan'}\nuser = collection[1]\nuser.age = 5\ncollection.update({1: {'age': user.age}})\n# user = {name: 'Ivan', age: user}\n\ndel collection[1]`,\n\n        'javascript':\n            `const {getDatabase} = require('dbhub');\n\nconst db = getDatabase(\n   '${token}',\n   '${dbName}'\n);\n\nconst collection = db.getCollection('users');\ncollection[1] = {name: 'Ivan'}\nlet user = collection[1]\nuser.age = 5\ncollection.update({1: {age: user.age}})\n// user = {name: 'Ivan', age: user}\n\ncollection.delete(1)`\n    }\n\n    return code[language]\n}\n\nexport const getInstall = (language) => {\n    let installs = {\n        'javascript': 'npm install dbhub -s',\n        'python': 'pip install dbhub'\n    }\n    return installs[language]\n}","import React from 'react'\n\n\nexport const copyIcon =\n    <svg className='copy' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'>\n        <g data-name='Layer 3'>\n            <path d='M40.63,13H12.38A4.69,4.69,0,0,0,7.7,17.67V57.31A4.69,4.69,0,0,0,12.38,62H40.63a4.69,4.69,0,0,0,4.69-4.69V17.67A4.69,4.69,0,0,0,40.63,13Zm2.69,44.33A2.69,2.69,0,0,1,40.63,60H12.38A2.69,2.69,0,0,1,9.7,57.31V17.67A2.69,2.69,0,0,1,12.38,15H40.63a2.69,2.69,0,0,1,2.69,2.69Z'/>\n            <path d='M51.74,2H23.26a4.58,4.58,0,0,0-4.58,4.57v3.55a1,1,0,0,0,2,0V6.57A2.58,2.58,0,0,1,23.26,4H51.74A2.57,2.57,0,0,1,54.3,6.57V46.44A2.58,2.58,0,0,1,51.74,49H48.5a1,1,0,0,0,0,2h3.24a4.58,4.58,0,0,0,4.57-4.58V6.57A4.57,4.57,0,0,0,51.74,2Z'/>\n        </g>\n    </svg>","import React from 'react'\n\n\nexport const copiedIcon =\n    <svg className='copy' xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\"/></svg>\n","import {useState, useEffect} from \"react\"\n\nconst copyListeners = []\n\nfunction useCopy() {\n    const [copiedValue, setCopiedValue] = useState('');\n\n\n    useEffect(() => {\n        copyListeners.push(setCopiedValue)\n\n        document.addEventListener('copy', handleCopy);\n        handleCopy()\n\n        return () => document.removeEventListener(\"copy\", handleCopy);\n    }, []);\n\n    const handleCopy = () => {\n        navigator.clipboard.readText()\n            .then(text => {\n                copyListeners.forEach((set) => set(text))\n            })\n            .catch(err => {\n                console.error('Failed to read clipboard contents: ', err);\n            });\n    }\n\n    const copy = (text) => {\n        navigator.clipboard.writeText(text)\n        handleCopy()\n    }\n\n    return [copiedValue, copy];\n}\n\n\nexport {useCopy}","import { copyIcon } from './copyIcon'\nimport { copiedIcon } from './arrow'\nimport './index.sass'\n\nimport React from 'react'\nimport {cb} from \"react-syntax-highlighter/dist/cjs/styles/prism\";\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\nimport {useCopy} from \"../../helpers/system\";\n\n\nfunction TextBlock({className, text, textToCopy, language, showLineNumbers=false}) {\n    const [copiedValue, copy] = useCopy()\n\n    textToCopy = textToCopy ? textToCopy : text\n    const isCopied = copiedValue === textToCopy\n    const icon = isCopied ? copiedIcon : copyIcon\n\n    return (\n        <div className={`textBlock`}>\n            <SyntaxHighlighter className={`bordered ${className}`} language={language} style={cb}\n                               showLineNumbers={showLineNumbers}>\n                {text}\n            </SyntaxHighlighter>\n            <div onClick={() => copy(textToCopy)}>{icon}</div>\n        </div>\n    )\n}\n\n\nexport {TextBlock}","import './index.sass'\n\nimport React, {useEffect, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\n\nimport {Toggle} from \"../../components/ToggleButton\"\nimport {getInstall, getUsageBlock, JAVASCRIPT, PYTHON } from \"./codeExample\"\nimport {useAuth} from \"../../network/auth\"\nimport {useWindowSize} from \"../../helpers/visual\";\nimport {TextBlock} from \"../../components/TextBlock\";\n\nconst instructionsClassName = 'instructions'\nconst appear = 'appear'\n\n\nfunction Instructions() {\n    const { t } = useTranslation()\n\n    const auth = useAuth()\n    const token = auth.user.token\n    const dbName = auth.user.dbName\n\n    const {width} = useWindowSize()\n    const isMobile = width < 500\n\n    const languages = [\n        {name: JAVASCRIPT, isDisabled: true},\n        {name: PYTHON, isDisabled: false}\n    ]\n\n    let [toggled, setToggled] = useState(languages.find((el) => !el.isDisabled))\n    let language = toggled.name\n\n    useEffect(() => {\n        let elem = document.getElementById(instructionsClassName)\n        elem.classList.add(appear)\n    })\n\n    return (\n        <div id={instructionsClassName}>\n            <Toggle className='languageToggle' buttons={languages} started={toggled} cb={setToggled}/>\n            <h3 className='label'>{t('your_api_key')}</h3>\n            <TextBlock text={token} className=\"bordered\" language='bash'/>\n            <h3 className='label'>{t('your_db_name')}</h3>\n            <TextBlock text={dbName} className=\"bordered\" language='bash'/>\n            <TextBlock text={'$ ' + getInstall(language)} textToCopy={getInstall(language)}\n                       className=\"bordered\" language='bash'/>\n            <TextBlock text={getUsageBlock(language, token, dbName)}\n                       className=\"bordered\" showLineNumbers={!isMobile} language={language}/>\n        </div>\n    )\n}\n\n\nexport {Instructions}","import {useState, useEffect} from \"react\"\n\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        window.addEventListener(\"resize\", handleResize);\n\n        handleResize();\n\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowSize;\n}\n\n\nexport {useWindowSize}","import {useProvideAuth, authContext} from \"../../network/auth\"\n\n\nfunction ProvideAuth({ children }) {\n    const auth = useProvideAuth()\n    return (\n        <authContext.Provider value={auth}>\n            {children}\n        </authContext.Provider>\n    )\n}\n\nexport {ProvideAuth}","import {useAuth} from \"../../network/auth\"\nimport {PREFIX} from \"../../network/env\"\nimport {Redirect, Route} from \"react-router-dom\"\n\nfunction PrivateRoute({children}) {\n    let auth = useAuth()\n    return (\n        <Route\n            render={({ location }) =>\n                auth.user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: PREFIX,\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    )\n}\n\nexport {PrivateRoute}","import React from 'react'\nimport {useTranslation} from 'react-i18next'\n\n\nfunction Donation({className}) {\n    const { t } = useTranslation()\n\n    return (\n        <div className={className}>\n            <a href='https://pay.cloudtips.ru/p/ace9a3eb'>{t('donation')}</a>\n        </div>\n    )\n}\n\n\nexport {Donation}\n","import './App.sass'\n\nimport React from 'react'\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport {useTranslation} from 'react-i18next'\n\nimport {PREFIX} from \"./network/env\"\n\nimport {CreateDB} from './pages/CreateDB'\nimport {Instructions} from \"./pages/Instructions\";\n\nimport {ProvideAuth} from \"./components/ProvideAuth\"\nimport {PrivateRoute} from \"./components/PrivateRoute\"\n// import {Localization} from \"./components/Localization\"\nimport {Donation} from \"./components/Donation\";\n\n\nfunction App() {\n    const { t } = useTranslation()\n\n    return (\n    <div className='App'>\n        {/*<Localization/>*/}\n        <header className='header'>DB<span className='header-selection'>hub</span></header>\n        <ProvideAuth>\n            <Router>\n                <Switch>\n                    <Route exact path={`${PREFIX}`}>\n                        <CreateDB/>\n                    </Route>\n                    <PrivateRoute path={`${PREFIX}credentials`}>\n                        <Instructions/>\n                    </PrivateRoute>\n                </Switch>\n            </Router>\n        </ProvideAuth>\n        <div className='signs'>\n            <Donation className='donations'/>\n            <div>{t('created_by')} <a href='https://twitter.com/nnoxnnox'>@noxormy</a></div>\n        </div>\n    </div>\n  )\n}\n\n\nexport default App\n","import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\nimport translationEN from './locales/english.json'\nimport translationRU from './locales/russian.json'\n\nconst resources = {\n    en: {\n        translation: translationEN\n    },\n    ru: {\n        translation: translationRU\n    }\n}\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        keySeparator: false, // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    })\n\nexport default i18n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './i18next'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}