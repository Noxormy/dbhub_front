{"version":3,"sources":["network/env.js","network/requests.js","network/auth.js","components/Button/index.js","components/LoadingBar/index.js","pages/CreateDB/index.js","components/ToggleButton/index.js","components/TextBlock/copyIcon.js","components/TextBlock/index.js","pages/Instructions/codeExample.js","pages/Instructions/index.js","components/ProvideAuth/index.js","components/PrivateRoute/index.js","i18next.js","components/Localization/index.js","App.js","index.js"],"names":["PREFIX","API","CREATE_NEW_USER","TOKEN","DB","a","token","localStorage","getItem","dbName","fetch","result","ok","json","data","setItem","db_name","Error","statusText","removeItem","authContext","createContext","useAuth","useContext","useProvideAuth","useState","user","setUser","signIn","cb","setLoading","createDatabase","then","signOut","removeDatabase","Button","name","callback","onClick","className","LoadingBar","animation","isLoading","style","CreateDB","t","useTranslation","history","useHistory","auth","push","Toggle","buttons","curr","setCurr","buttonBlocks","map","element","key","copyIcon","xmlns","viewBox","data-name","d","TextBlock","text","textToCopy","isCopied","setIsCopied","additionalClass","textarea","document","createElement","setAttribute","textContent","body","appendChild","select","execCommand","remove","setTimeout","copy","getUsageBlock","language","apiKey","getInstall","getUsage","apikey","instructionsClassName","Instructions","console","log","languages","toggledKey","setToggledKey","useEffect","getElementById","classList","add","id","ProvideAuth","children","Provider","value","PrivateRoute","render","location","to","pathname","state","from","resources","en","translation","ru","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","Localization","changeLanguage","App","exact","path","href","ReactDOM"],"mappings":"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","file":"static/js/main.abdf5cb5.chunk.js","sourcesContent":["export const PREFIX = '/dbhub_front/'","const API = 'https://dbhub-py.herokuapp.com/'\nconst CREATE_NEW_USER = 'create-new-user'\n\nconst TOKEN = 'token'\nconst DB = 'dbName'\n\n\nexport async function createDatabase() {\n    let token = localStorage.getItem(TOKEN)\n    let dbName = localStorage.getItem(DB)\n    if(token && dbName) {\n        return {token: token, dbName: dbName}\n    }\n\n    let result = await fetch(`${API}/${CREATE_NEW_USER}`)\n\n    if (result.ok) {\n        let data = await result.json()\n        localStorage.setItem(TOKEN, data.token)\n        localStorage.setItem(DB, data.db_name)\n\n        return {token: data.token, dbName: data.db_name}\n    } else {\n        throw new Error(result.statusText)\n    }\n}\n\n// TODO: Add remove database method\nexport async function removeDatabase() {\n    // let result = await fetch(`${API}/${CREATE_NEW_USER}`)\n    //\n    // if (result.ok) {\n    //     let data = await result.json()\n    localStorage.removeItem(TOKEN)\n    localStorage.removeItem(DB)\n    //     return data\n    // } else {\n    //     throw new Error(result.statusText)\n    // }\n}","import {createContext, useContext, useState} from \"react\"\nimport {createDatabase, removeDatabase} from \"./requests\"\n\nconst authContext = createContext(null)\n\n\nfunction useAuth() {\n    return useContext(authContext)\n}\n\n\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null)\n\n    const signIn = (cb, setLoading) => {\n        setLoading(true)\n\n        return createDatabase().then((data) => {\n            setUser({\n                dbName: data.dbName,\n                token: data.token\n            })\n            setLoading(false)\n            cb()\n        })\n    }\n\n    const signOut = cb => {\n        return removeDatabase().then(() => {\n            setUser(null)\n            cb()\n        })\n    }\n\n    return {\n        user,\n        signIn,\n        signOut\n    }\n}\n\n\nexport {authContext, useAuth, useProvideAuth}","import React from 'react'\nimport './index.css'\n\n\nfunction Button({name, callback}) {\n    return (\n        <button onClick={callback} className='button'>{name}</button>\n    )\n}\n\n\nexport {Button}\n","import React from \"react\"\nimport './index.sass'\n\nconst ANIMATION_TYPE = '2s ease-in-out infinite loading'\n\n\nfunction LoadingBar({isLoading}) {\n    const animation = isLoading ? ANIMATION_TYPE : 'none'\n\n    return (\n        <div className='loadingBar'>\n            <div className='loaderPlaceholder'/>\n            <div className='loader' style={{ animation: animation}}/>\n        </div>\n    )\n}\n\n\nexport {LoadingBar}","import './index.sass'\n\nimport React, {useState} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport {useTranslation} from 'react-i18next'\n\nimport {useAuth} from \"../../network/auth\"\nimport {PREFIX} from \"../../network/env\"\n\nimport {Button} from '../../components/Button'\nimport {LoadingBar} from \"../../components/LoadingBar\"\n\n\nfunction CreateDB() {\n    const { t } = useTranslation()\n    const history = useHistory()\n    const auth = useAuth()\n\n    let [isLoading, setLoading] = useState(false)\n    const login = () => auth.signIn(() => history.push(`${PREFIX}credentials`), setLoading)\n    \n    return(\n        <div className='createElement'>\n            <LoadingBar isLoading={isLoading}/>\n            <h2>{t('create_in_one_click')}</h2>\n            <h3>{t('make_it_easy')}</h3>\n            <Button name={t('create_database')} callback={login}/>\n        </div>\n    )\n}\n\n\nexport {CreateDB}\n","import React, {useState} from 'react'\nimport './index.sass'\n\n\nfunction Toggle({buttons, className, cb}) {\n    let [curr, setCurr] = useState(0)\n    let onClick = (key) => {\n        setCurr(key)\n        cb(key)\n    }\n\n    let buttonBlocks = buttons.map((element, key) => {\n        let className = key === curr ? 'toggled' : '' \n        return (<div className={`toggleButton ${className}`} onClick={() => onClick(key)} key={key}>{element}</div>)\n    })\n    \n    return(\n        <div className={`toggleButtons ${className}`}>{ buttonBlocks }</div>\n    )\n}\n\n\nexport {Toggle}","import React from 'react'\n\n\nexport const copyIcon =\n    <svg className='copy' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'>\n        <g data-name='Layer 3'>\n            <path d='M40.63,13H12.38A4.69,4.69,0,0,0,7.7,17.67V57.31A4.69,4.69,0,0,0,12.38,62H40.63a4.69,4.69,0,0,0,4.69-4.69V17.67A4.69,4.69,0,0,0,40.63,13Zm2.69,44.33A2.69,2.69,0,0,1,40.63,60H12.38A2.69,2.69,0,0,1,9.7,57.31V17.67A2.69,2.69,0,0,1,12.38,15H40.63a2.69,2.69,0,0,1,2.69,2.69Z'/>\n            <path d='M51.74,2H23.26a4.58,4.58,0,0,0-4.58,4.57v3.55a1,1,0,0,0,2,0V6.57A2.58,2.58,0,0,1,23.26,4H51.74A2.57,2.57,0,0,1,54.3,6.57V46.44A2.58,2.58,0,0,1,51.74,49H48.5a1,1,0,0,0,0,2h3.24a4.58,4.58,0,0,0,4.57-4.58V6.57A4.57,4.57,0,0,0,51.74,2Z'/>\n        </g>\n    </svg>","import { copyIcon } from './copyIcon'\nimport './index.sass'\nimport React, {useState} from 'react'\n\nconst copiedClass = 'copied'\n\n\nfunction TextBlock({className, text, textToCopy}) {\n    let [isCopied, setIsCopied] = useState(false)\n    let additionalClass = isCopied ? ' ' + copiedClass : ''\n\n    return (\n        <div className={`textBlock ${additionalClass} ${className}`}>\n            <div onClick={() => copy(textToCopy, setIsCopied)}>{copyIcon}</div>\n            {text}\n        </div>\n    )\n}\n\n\nfunction copy(text, setIsCopied) {\n    let textarea = document.createElement('textarea')\n    textarea.setAttribute('visibility', 'collapse')\n    textarea.textContent = text\n    document.body.appendChild(textarea)\n    textarea.select()\n    document.execCommand('copy')\n    textarea.remove()\n\n    setIsCopied(true)\n    setTimeout(() => setIsCopied(false), 1000)\n}\n\n\nexport {TextBlock}","import React from \"react\"\nimport './codeExample.sass'\n\nexport const NODE_JS = 'nodejs'\nexport const PYTHON = 'python'\n\nexport const getUsageBlock = (language, apiKey) => {\n    const languageUsages = {\n        'nodejs': (\n            <p>\n                <span className=\"keyword\">const</span> {'{'}<span className=\"variable\">getDatabase</span>{'}'} =<span className=\"func\"> require</span>(<span className=\"string\">'dbhub'</span>)<br/>\n                <br/>\n                <span className=\"keyword\">let</span> <span className=\"variable\">apiKey</span> =<span className=\"string\"> '{apiKey}'</span><br/>\n                <span className=\"keyword\">let</span> <span className=\"variable\">db</span> =<span className=\"func\"> getDatabase</span>(<span className=\"variable\">apiKey</span>)<br/>\n                <br/>\n                {'// Create collection'}<br/>\n                <span className=\"keyword\">let</span> <span className=\"variable\">collectionName</span> = <span className=\"string\">'example'</span><br/>\n                <span className=\"keyword\">let</span> <span className=\"variable\">collection</span> = <span className=\"variable\">db</span>.<span className=\"func\">getCollection</span>(<span className=\"variable\">collectionName</span>)<br/>\n                <br/>\n                {'//Usage'}<br/>\n                <span className=\"variable\">collection</span>.<span className=\"func\">create</span>(<span className=\"variable\">element</span>).<span className=\"func\">then</span>((<span className=\"variable\">id</span>) => {'{}'})<br/>\n                <span className=\"variable\">collection</span>.<span className=\"func\">read</span>(<span className=\"variable\">id</span>).<span className=\"func\">then</span>((<span className=\"variable\">element</span>) => {'{}'})<br/>\n                <span className=\"variable\">collection</span>.<span className=\"func\">update</span>(<span className=\"variable\">id</span>, <span className=\"variable\">element</span>).<span className=\"func\">then</span>((<span className=\"variable\">success</span>) => {'{}'})<br/>\n                <span className=\"variable\">collection</span>.<span className=\"func\">delete</span>(<span className=\"variable\">id</span>).<span className=\"func\">then</span>((<span className=\"variable\">success</span>) => {'{}'})<br/>\n            </p>\n        ),\n        'python': (\n            <p>\n                <span className=\"keyword\">from </span><span className=\"variable\">dbhub</span> <span className=\"keyword\">import</span> <span className=\"func\"></span><span className=\"string\">get_database</span><br/>\n                <br/>\n                <span className=\"variable\">api_key</span> =<span className=\"string\"> '{apiKey}'</span><br/>\n                <span className=\"variable\">db</span> =<span className=\"func\"> get_database</span>(<span className=\"variable\">api_key</span>)<br/>\n                <br/>\n                {'// Create collection'}<br/>\n                <span className=\"variable\">collection_name</span> = <span className=\"string\">'example'</span><br/>\n                <span className=\"variable\">collection</span> = <span className=\"variable\">db</span>.<span className=\"func\">get_collection</span>(<span className=\"variable\">collection_name</span>)<br/>\n                <br/>\n                {'//Usage'}<br/>\n                <span className=\"variable\">collection</span>.<span className=\"func\">create</span>(<span className=\"variable\">element</span>)<br/>\n                <span className=\"variable\">collection</span>.<span className=\"func\">read</span>(<span className=\"variable\">id</span>)<br/>\n                <span className=\"variable\">collection</span>.<span className=\"func\">update</span>(<span className=\"variable\">id</span>, <span className=\"variable\">element</span>)<br/>\n                <span className=\"variable\">collection</span>.<span className=\"func\">delete</span>(<span className=\"variable\">id</span>)<br/>\n                <br/>\n            </p>\n        )}\n    return languageUsages[language]\n}\n\nexport const getInstall = (language) => {\n    let installs = {\n        'nodejs': 'npm install dbhub -s',\n        'python': 'pip install dbhub'\n    }\n    return installs[language]\n}\n\nexport const getUsage = (language, apikey) => {\n    const usage = {\n        'nodejs': ('const {getDatabase} = require(\\'dbhub\\')\\n' +\n            '\\n' +\n            'let apiKey = \\'' + apikey + '\\'\\n' +\n            'let db = getDatabase(apiKey)\\n' +\n            '\\n' +\n            '// Create collection\\n' +\n            'let collectionName = \\'example\\'\\n' +\n            'let collection = db.getCollection(collectionName)\\n' +\n            '\\n' +\n            '//Usage\\n' +\n            'collection.create(element).then((id) => {})\\n' +\n            'collection.read(id).then((element) => {})\\n' +\n            'collection.update(id, element).then((success) => {})\\n' +\n            'collection.delete(id).then((success) => {})'),\n\n        'python':\n            ('from dbhub import get_database\\n' +\n                '\\n' +\n                'api_key = \\'aa57dc3a-df8c-1c53-b5f7-6c598a7e4644\\'\\n' +\n                'db = get_database(api_key)\\n' +\n                '\\n' +\n                '# Create collection\\n' +\n                'collection_name = \\'example\\'\\n' +\n                'collection = db.get_collection(collection_name)\\n' +\n                '\\n' +\n                '# Usage\\n' +\n                'collection.create(element)\\n' +\n                'collection.read(id)\\n' +\n                'collection.update(id, element)\\n' +\n                'collection.delete(id)\\n')\n    }\n    return usage[language]\n}","import './index.sass'\n\nimport React, {useEffect, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\n\nimport {Toggle} from \"../../components/ToggleButton\"\nimport {TextBlock} from \"../../components/TextBlock\"\nimport {getInstall, getUsage, getUsageBlock, NODE_JS, PYTHON } from \"./codeExample\"\nimport {useAuth} from \"../../network/auth\"\n\nconst instructionsClassName = 'instructions'\nconst appear = 'appear'\n\n\nfunction Instructions() {\n    const { t } = useTranslation()\n\n    const auth = useAuth()\n    const token = auth.user.token\n    const dbName = auth.user.dbName\n\n    console.log(token)\n    console.log(dbName)\n\n    const languages = [\n        NODE_JS,\n        PYTHON,\n    ]\n\n    let [toggledKey, setToggledKey] = useState(0)\n    let language = languages[toggledKey]\n\n    useEffect(() => {\n        let elem = document.getElementById(instructionsClassName)\n        elem.classList.add(appear)\n    })\n\n    return (\n        <div id={instructionsClassName}>\n            <Toggle className='languageToggle' buttons={languages} cb={setToggledKey}/>\n            <h3 className='label'>{t('your_api_key')}</h3>\n            <TextBlock className='apiKey' text={token} textToCopy={token}/>\n            <h3 className='label'>{t('your_db_name')}</h3>\n            <TextBlock className='db-name' text={dbName} textToCopy={dbName}/>\n            <TextBlock className='install' text={'$ ' + getInstall(language)} textToCopy={getInstall(language)}/>\n            <TextBlock className='usage' text={getUsageBlock(language, token)} textToCopy={getUsage(language, token)}/>\n        </div>\n    )\n}\n\n\nexport {Instructions}","import {useProvideAuth, authContext} from \"../../network/auth\"\n\n\nfunction ProvideAuth({ children }) {\n    const auth = useProvideAuth()\n    return (\n        <authContext.Provider value={auth}>\n            {children}\n        </authContext.Provider>\n    )\n}\n\nexport {ProvideAuth}","import {useAuth} from \"../../network/auth\"\nimport {PREFIX} from \"../../network/env\"\nimport {Redirect, Route} from \"react-router-dom\"\n\nfunction PrivateRoute({children}) {\n    let auth = useAuth()\n    return (\n        <Route\n            render={({ location }) =>\n                auth.user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: PREFIX,\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    )\n}\n\nexport {PrivateRoute}","import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\nimport translationEN from './locales/english.json'\nimport translationRU from './locales/russian.json'\n\nconst resources = {\n    en: {\n        translation: translationEN\n    },\n    ru: {\n        translation: translationRU\n    }\n}\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        keySeparator: false, // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    })\n\nexport default i18n","import i18n from \"../../i18next\"\n\n\nfunction Localization() {\n    return (\n        <div className='localeSettings'>\n            <span className='language' onClick={() => i18n.changeLanguage('en')}>en</span>\n            <span> / </span>\n            <span className='language' onClick={() => i18n.changeLanguage('ru')}>ru</span>\n        </div>\n    )\n}\n\nexport {Localization}","import './App.sass'\n\nimport React from 'react'\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport {useTranslation} from 'react-i18next'\n\nimport {PREFIX} from \"./network/env\"\n\nimport {CreateDB} from './pages/CreateDB'\nimport {Instructions} from \"./pages/Instructions\";\n\nimport {ProvideAuth} from \"./components/ProvideAuth\"\nimport {PrivateRoute} from \"./components/PrivateRoute\"\nimport {Localization} from \"./components/Localization\"\n\n\nfunction App() {\n    const { t } = useTranslation()\n\n    return (\n    <div className='App'>\n        <Localization/>\n        <header className='header'>DB<span className='header-selection'>hub</span></header>\n        <ProvideAuth>\n            <Router>\n                <Switch>\n                    <Route exact path={`${PREFIX}`}>\n                        <CreateDB/>\n                    </Route>\n                    <PrivateRoute path={`${PREFIX}credentials`}>\n                        <Instructions/>\n                    </PrivateRoute>\n                </Switch>\n            </Router>\n        </ProvideAuth>\n        <div className='signs'>{t('created_by')} <a href='https://twitter.com/nnoxnnox'>@noxormy</a></div>\n    </div>\n  )\n}\n\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './i18next'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}